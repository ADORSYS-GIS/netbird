- name: Setup Netbird network and routing
  hosts: netbird_clients, host_machine
  become: yes
  vars:
    vm_subnet: "10.235.7.0/24"
    external_interface: "ens3"
    # Do NOT define netbird_setup_key here

  tasks:
    - name: Check if Netbird is installed
      stat:
        path: /usr/bin/netbird
      register: netbird_installed

    - name: Install Netbird client if not present
      shell: curl -fsSL https://pkgs.netbird.io/install.sh | sh
      when: not netbird_installed.stat.exists
      args:
        warn: false

    - name: Check Netbird connection status
      command: netbird status
      register: netbird_status
      ignore_errors: true
      when: inventory_hostname in groups['netbird_clients']

    - name: Connect to Netbird network if not connected
      command: netbird up --setup-key {{ netbird_setup_key }}
      when: inventory_hostname in groups['netbird_clients'] and "'Connected' not in netbird_status.stdout"
      register: netbird_up
      retries: 5
      delay: 5
      until: netbird_up.rc == 0

    - name: Enable IP forwarding (only for targethost1 if NAT is enabled)
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes
      when: enable_nat | default(false) and inventory_hostname == "targethost1"

    - name: Check if NAT rule already exists
      command: >
        iptables -t nat -C POSTROUTING -s {{ vm_subnet }} ! -d {{ vm_subnet }} -o {{ external_interface }} -j MASQUERADE
      register: nat_check
      ignore_errors: true
      when: enable_nat | default(false) and inventory_hostname == "targethost1"

    - name: Add NAT rule if not present
      command: >
        iptables -t nat -A POSTROUTING -s {{ vm_subnet }} ! -d {{ vm_subnet }} -o {{ external_interface }} -j MASQUERADE
      when: enable_nat | default(false) and inventory_hostname == "targethost1" and nat_check.failed
