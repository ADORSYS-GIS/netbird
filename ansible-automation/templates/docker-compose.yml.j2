# Docker Compose template for NetBird deployment with Caddy as a reverse proxy.
# This file is generated by Ansible from docker-compose.yml.j2.

version: '3.8'

# Default arguments for all services.
# These settings ensure that containers restart automatically and are part of the 'netbird' Docker network.
x-default-args: &default
  restart: unless-stopped
  networks:
    - netbird

services:
  # Caddy reverse proxy service.
  # Caddy handles SSL termination, serves the NetBird dashboard, and proxies requests to other NetBird services.
  netbird-caddy:
    <<: *default
    image: caddy:2-alpine
    container_name: netbird-caddy
    ports:
      - "80:80" # Expose HTTP port 80 for ACME challenges and redirects.
      - "443:443" # Expose HTTPS port 443 for secure communication.
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro # Mount the Caddy configuration file.
      - caddy_data:/data # Volume for Caddy's persistent data, including SSL certificates.
    networks:
      - netbird
    depends_on:
      - management # Ensure management service is running before Caddy starts.
      - signal # Ensure signal service is running before Caddy starts.

  # NetBird Dashboard service.
  # This service provides the web-based user interface for managing NetBird.
  dashboard:
    <<: *default
    image: netbirdio/dashboard:latest
    ports:
      - 8081:80 # Expose internal port 80 to host port 8081 (Caddy will proxy to internal 80).
    networks:
      - netbird
    environment:
      # NetBird Management API and gRPC endpoints, configured to be accessed via Caddy.
      - NETBIRD_MGMT_API_ENDPOINT=https://{{ netbird_domain }}
      - NETBIRD_MGMT_GRPC_API_ENDPOINT=https://{{ netbird_domain }}
      # OIDC authentication configuration. These variables are placeholders for Keycloak setup.
      - AUTH_AUDIENCE={{ netbird_auth_audience }}
      - AUTH_CLIENT_ID={{ netbird_auth_client_id }}
      - AUTH_AUTHORITY={{ netbird_auth_authority }}
      - USE_AUTH0=false
      - AUTH_SUPPORTED_SCOPES=openid profile email offline_access api
      - NETBIRD_TOKEN_SOURCE=accessToken
      - NGINX_SSL_PORT=443 # Nginx SSL port, kept for compatibility.
    volumes:
      - netbird-letsencrypt:/etc/letsencrypt/ # Volume for Let's Encrypt certificates.

  # NetBird Signal service.
  # The Signal service is crucial for establishing peer-to-peer connections between NetBird clients.
  signal:
    <<: *default
    image: netbirdio/signal:latest
    networks:
      - netbird
    volumes:
      - netbird-signal:/var/lib/netbird # Volume for signal service data.
    ports:
      - 10000:80 # Expose internal port 80 to host port 10000 (Caddy will proxy to internal 80).

  # NetBird Management service.
  # This service handles the core logic, user management, and network configuration for NetBird.
  management:
    <<: *default
    image: netbirdio/management:latest
    depends_on:
      - dashboard # Dependency on dashboard (though typically management starts first).
    networks:
      - netbird
    volumes:
      - netbird-mgmt:/var/lib/netbird # Volume for management service data.
      - netbird-letsencrypt:/etc/letsencrypt:ro # Read-only volume for Let's Encrypt certificates.
      - ./management.json:/etc/netbird/management.json:ro # Mount the management.json configuration file.
    ports:
      - 33073:80 # Expose internal port 80 to host port 33073 (Caddy will proxy to internal 80).
    command: [
      "--port", "80", # Listen on internal port 80.
      "--log-file", "console", # Direct logs to console.
      "--log-level", "info", # Set logging level to info.
      "--disable-anonymous-metrics=false", # Enable anonymous metrics.
      "--single-account-mode-domain={{ netbird_domain }}", # Configure single account mode domain.
      "--dns-domain=netbird.selfhosted" # Configure DNS domain for NetBird.
    ]
    environment:
      - NETBIRD_STORE_ENGINE_POSTGRES_DSN= # Placeholder for PostgreSQL DSN.
      - NETBIRD_STORE_ENGINE_MYSQL_DSN= # Placeholder for MySQL DSN.

  # NetBird Relay service.
  # The Relay service facilitates peer-to-peer connections, especially for clients behind NAT.
  relay:
    <<: *default
    image: netbirdio/relay:latest
    networks:
      - netbird
    environment:
      - NB_LOG_LEVEL=info # Set logging level to info.
      - NB_LISTEN_ADDRESS=:33080 # Listen on internal port 33080.
      - NB_EXPOSED_ADDRESS=rels://{{ netbird_domain }}/relay # Exposed address for the relay, proxied through Caddy.
      - NB_AUTH_SECRET={{ netbird_relay_secret }} # Authentication secret for the relay.
    ports:
      - 33080:33080 # Expose internal port 33080 to host port 33080.

  # CoTURN STUN/TURN server service.
  # CoTURN assists in NAT traversal for peer-to-peer connections, allowing clients to discover their public IP.
  coturn:
    <<: *default
    image: coturn/coturn:latest
    volumes:
      - ./turnserver.conf:/etc/turnserver.conf:ro # Mount the turnserver.conf configuration file.
    network_mode: host # CoTURN requires host network mode for proper NAT traversal.
    command:
      - -c /etc/turnserver.conf # Command to start CoTURN with the specified configuration.

# Define Docker networks used by the services.
networks:
  netbird: # Custom bridge network for all NetBird services to communicate internally.

# Define Docker volumes for persistent data storage.
volumes:
  netbird-mgmt: # Volume for NetBird management service data.
  netbird-signal: # Volume for NetBird signal service data.
  netbird-letsencrypt: # Volume for Let's Encrypt certificates.
  caddy_data: # Volume for Caddy's persistent data.