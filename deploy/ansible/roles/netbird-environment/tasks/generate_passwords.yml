---
- name: Check if existing environment file exists
  stat:
    path: "{{ netbird_config_dir }}/netbird.env"
  register: existing_env_file

- name: Load existing passwords if environment file exists
  block:
    - name: Read existing environment file
      slurp:
        src: "{{ netbird_config_dir }}/netbird.env"
      register: existing_env_content
      when: existing_env_file.stat.exists

    - name: Parse existing passwords
      set_fact:
        existing_keycloak_password: "{{ existing_env_content.content | b64decode | regex_search('KEYCLOAK_ADMIN_PASSWORD=(.+)', '\\1') | first | default('') }}"
        existing_postgres_password: "{{ existing_env_content.content | b64decode | regex_search('POSTGRES_PASSWORD=(.+)', '\\1') | first | default('') }}"
        existing_relay_secret: "{{ existing_env_content.content | b64decode | regex_search('NETBIRD_RELAY_AUTH_SECRET=(.+)', '\\1') | first | default('') }}"
        existing_turn_password: "{{ existing_env_content.content | b64decode | regex_search('TURN_PASSWORD=(.+)', '\\1') | first | default('') }}"
        existing_datastore_key: "{{ existing_env_content.content | b64decode | regex_search('NETBIRD_DATASTORE_ENC_KEY=(.+)', '\\1') | first | default('') }}"
        existing_mgmt_secret: "{{ existing_env_content.content | b64decode | regex_search('NETBIRD_IDP_MGMT_CLIENT_SECRET=(.+)', '\\1') | first | default('') }}"
        existing_auth_client_secret: "{{ existing_env_content.content | b64decode | regex_search('NETBIRD_AUTH_CLIENT_SECRET=(.+)', '\\1') | first | default('') }}"
      when: existing_env_file.stat.exists
  when: existing_env_file.stat.exists

- name: Generate new passwords if not existing
  set_fact:
    keycloak_admin_password: "{{ existing_keycloak_password | default(lookup('password', '/dev/null chars=ascii_letters,digits length=' + (password_length | string))) }}"
    postgres_password: "{{ existing_postgres_password | default(lookup('password', '/dev/null chars=ascii_letters,digits length=' + (password_length | string))) }}"
    relay_auth_secret: "{{ existing_relay_secret | default(lookup('password', '/dev/null chars=ascii_letters,digits,+,/ length=44') | b64encode) }}"
    turn_password: "{{ existing_turn_password | default(lookup('password', '/dev/null chars=ascii_letters,digits length=24') | b64encode) }}"
    datastore_enc_key: "{{ existing_datastore_key | default(lookup('password', '/dev/null chars=ascii_letters,digits length=32')) }}"
    keycloak_mgmt_secret: "{{ existing_mgmt_secret | default(lookup('password', '/dev/null chars=ascii_letters,digits,+,/ length=44') | b64encode) }}"
    netbird_auth_client_secret: "{{ existing_auth_client_secret | default(lookup('password', '/dev/null chars=ascii_letters,digits length=32')) }}"

- name: Generate additional secrets
  set_fact:
    postgres_password_encoded: "{{ postgres_password | urlencode }}"

- name: Display password generation status
  debug:
    msg:
      - "Password generation completed"
      - "Using existing passwords: {{ 'Yes' if existing_env_file.stat.exists else 'No' }}"
      - "Keycloak admin password: {{ keycloak_admin_password[:8] }}..."
      - "PostgreSQL password: {{ postgres_password[:8] }}..."
