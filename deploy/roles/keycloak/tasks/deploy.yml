---
# Deploy new Keycloak instance with PostgreSQL

- name: Install system prerequisites
  ansible.builtin.apt:
    name:
      - python3-pip
      - python3-setuptools
      - docker.io
      - curl
      - ca-certificates
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Create Docker CLI plugins directory
  ansible.builtin.file:
    path: /usr/local/lib/docker/cli-plugins
    state: directory
    mode: '0755'

- name: Download and install Docker Compose plugin
  ansible.builtin.get_url:
    url: https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-linux-x86_64
    dest: /usr/local/lib/docker/cli-plugins/docker-compose
    mode: '0755'

- name: Verify Docker Compose plugin installation
  ansible.builtin.command: docker compose version
  register: compose_version
  changed_when: false
  failed_when: false

- name: Ensure Docker service is started and enabled
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: yes

- name: Add current user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Install required Python packages for Docker management
  ansible.builtin.pip:
    name:
      - docker
      - requests
    state: present
    executable: pip3

- name: Create Keycloak data directory
  ansible.builtin.file:
    path: "{{ keycloak_data_dir }}"
    state: directory
    mode: '0755'
    owner: root
    group: root


- name: Render Docker Compose template
  ansible.builtin.template:
    src: keycloak-compose.yml.j2
    dest: "{{ keycloak_data_dir }}/docker-compose.yml"
    mode: '0644'
    backup: true
  register: compose_template

- name: Render Caddyfile template
  ansible.builtin.template:
    src: Caddyfile.j2
    dest: "{{ keycloak_data_dir }}/Caddyfile"
    mode: '0644'
    backup: true
  register: caddyfile_template

- name: Start Keycloak services
  community.docker.docker_compose_v2:
    project_src: "{{ keycloak_data_dir }}"
    state: present
    pull: always
    remove_orphans: yes
  register: compose_result

- name: Display Docker Compose deployment result
  ansible.builtin.debug:
    var: compose_result
    verbosity: 1

- name: Wait for Keycloak container to be healthy
  ansible.builtin.shell: docker inspect --format='{% raw %}{{.State.Health.Status}}{% endraw %}' netbird-keycloak
  register: keycloak_health_check
  until: keycloak_health_check.stdout == 'healthy'
  retries: 20
  delay: 10
  when: compose_result is succeeded
  changed_when: false

- name: Wait for Keycloak to be ready (check root path)
  ansible.builtin.uri:
    url: "http://localhost:{{ keycloak_http_port }}/"
    method: GET
    status_code: 200
  register: keycloak_health
  until: keycloak_health.status == 200
  retries: 10
  delay: 5
  when: compose_result is succeeded

- name: Wait for Caddy to be ready on port 443
  ansible.builtin.wait_for:
    port: 443
    delay: 5
    timeout: 60
  when: keycloak_health is succeeded

- name: Test Keycloak accessibility through Caddy (HTTPS)
  ansible.builtin.uri:
    url: "https://{{ keycloak_host }}/health/ready"
    method: GET
    status_code: 200
    validate_certs: no  # Allow self-signed certs for nip.io domains
  register: caddy_health
  until: caddy_health.status == 200
  retries: 10
  delay: 5
  when: keycloak_health is succeeded
  ignore_errors: yes

- name: Display deployment success message
  ansible.builtin.debug:
    msg:
      - "=========================================="
      - "üéâ Keycloak deployment completed successfully!"
      - "=========================================="
      - "Services Status:"
      - "  ‚úì PostgreSQL: Running"
      - "  ‚úì Keycloak: Running on port 8080"
      - "  ‚úì Caddy: Running on ports 80/443"
      - ""
      - "Access URLs:"
      - "  üåê Keycloak: https://{{ keycloak_host }}"
      - "  üîê Admin Console: https://{{ keycloak_host }}/admin"
      - ""
      - "Credentials:"
      - "  üë§ Admin Username: {{ keycloak_admin_user }}"
      - "  üîë Admin Password: {{ keycloak_admin_password }}"
      - ""
      - "OIDC Endpoints:"
      - "  üìã Master Realm: https://{{ keycloak_host }}/realms/master/.well-known/openid-configuration"
      - "  üìã NetBird Realm: https://{{ keycloak_host }}/realms/{{ keycloak_realm }}/.well-known/openid-configuration"
      - ""
      - "Note: Using self-signed certificates for *.nip.io domain."
      - "      You may need to accept the certificate in your browser."
      - "=========================================="
  when: keycloak_health is succeeded
