version: '3.8'

services:
  keycloak_db:
    image: postgres:{{ keycloak_postgres_version }}
    container_name: keycloak_postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: {{ keycloak_db_password }}
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:{{ keycloak_version }}
    container_name: netbird-keycloak
    networks:
      - keycloak_network
    depends_on:
      keycloak_db:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: {{ keycloak_db_password }}
      KEYCLOAK_ADMIN: {{ keycloak_admin_user }}
      KEYCLOAK_ADMIN_PASSWORD: {{ keycloak_admin_password }}
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_STRICT: "false"
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME: {{ keycloak_host }}
      KC_HOSTNAME_PORT: 443
      KC_PROXY: edge
      KC_HOSTNAME_STRICT_HTTPS: "false"
    command: ["start-dev"]
    volumes:
      - keycloak_data:/opt/keycloak/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 60s

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"  # HTTP/3
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - keycloak_network

volumes:
  keycloak_postgres_data:
    driver: local
  keycloak_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  caddy_logs:
    driver: local

networks:
  keycloak_network:
    driver: bridge
