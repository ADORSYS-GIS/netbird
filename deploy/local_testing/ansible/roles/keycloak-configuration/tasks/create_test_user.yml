---
# Clean up existing test user first (force fresh creation)
- name: Delete existing test user (if exists)
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh delete users
    --target-realm {{ keycloak_realm }}
    --query username={{ netbird_test_user }}
  args:
    chdir: "{{ netbird_base_dir }}"
  register: test_user_delete
  failed_when: false
  changed_when: test_user_delete.rc == 0

- name: Display user deletion status
  debug:
    msg: "ğŸ§¹ Test user cleanup: {{ 'Deleted' if test_user_delete.rc == 0 else 'Not found' }}"

- name: Check if test user exists
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh get users
    --target-realm {{ keycloak_realm }}
    --query username={{ netbird_test_user }}
  args:
    chdir: "{{ netbird_base_dir }}"
  register: test_user_check
  failed_when: false
  changed_when: false

- name: Create test user (force)
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh create users
    --target-realm {{ keycloak_realm }}
    --set username={{ netbird_test_user }}
    --set email={{ netbird_test_email }}
    --set firstName=Test
    --set lastName=User
    --set enabled=true
    --set emailVerified=true
  args:
    chdir: "{{ netbird_base_dir }}"
  register: test_user_creation
  changed_when: test_user_creation.rc == 0

- name: Set test user password
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh set-password
    --target-realm {{ keycloak_realm }}
    --username {{ netbird_test_user }}
    --new-password {{ netbird_test_password }}
  args:
    chdir: "{{ netbird_base_dir }}"
  register: password_set

- name: Create NetBird admin role
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh create roles
    --target-realm {{ keycloak_realm }}
    --set name=netbird-admin
    --set description="NetBird Administrator Role"
  args:
    chdir: "{{ netbird_base_dir }}"
  register: admin_role_creation
  failed_when: false

- name: Debug realm and authentication status
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh get realms/{{ keycloak_realm }}
  args:
    chdir: "{{ netbird_base_dir }}"
  register: realm_check
  failed_when: false
  changed_when: false

- name: Display realm check result
  debug:
    msg: 
      - "Realm check result: {{ realm_check.stdout }}"
      - "Return code: {{ realm_check.rc }}"

- name: List all users in realm (debug)
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh get users
    --target-realm {{ keycloak_realm }}
  args:
    chdir: "{{ netbird_base_dir }}"
  register: all_users_debug
  failed_when: false
  changed_when: false

- name: Display all users debug
  debug:
    msg: 
      - "All users in realm: {{ all_users_debug.stdout }}"
      - "Return code: {{ all_users_debug.rc }}"

- name: Get test user ID
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh get users
    --target-realm {{ keycloak_realm }}
    --query username={{ netbird_test_user }}
  args:
    chdir: "{{ netbird_base_dir }}"
  register: test_user_id_full
  changed_when: false

- name: Debug user ID response
  debug:
    msg: 
      - "User ID query response: {{ test_user_id_full.stdout }}"
      - "Parsed JSON: {{ test_user_id_full.stdout | from_json }}"
  when: test_user_id_full.stdout != ""

- name: Assign admin role to test user
  command: >
    sudo docker compose exec keycloak /opt/keycloak/bin/kcadm.sh add-roles
    --target-realm {{ keycloak_realm }}
    --uid {{ (test_user_id_full.stdout | from_json)[0].id }}
    --rolename netbird-admin
  args:
    chdir: "{{ netbird_base_dir }}"
  register: role_assignment
  when: test_user_id_full.stdout != "" and test_user_id_full.stdout != "[]" and (test_user_id_full.stdout | from_json) | length > 0
  failed_when: false

- name: Display test user creation summary
  debug:
    msg:
      - "âœ… Test user configured:"
      - "  - Username: {{ netbird_test_user }}"
      - "  - Email: {{ netbird_test_email }}"
      - "  - Password: {{ netbird_test_password }}"
      - "  - Role: netbird-admin"
      - "  - Status: {{ 'Created' if ('[]' in test_user_check.stdout) else 'Already exists' }}"
